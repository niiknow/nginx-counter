#!/bin/sh

source /etc/envvars

# update geoip database
cd /tmp
curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz -o /tmp/GeoLiteCity.dat.gz
gunzip -f GeoLiteCity.dat.gz
rm -f /usr/local/openresty/nginx/conf/conf.d/GeoLiteCity.dat
mv GeoLiteCity.dat /usr/local/openresty/nginx/conf/conf.d/GeoLiteCity.dat

# hit local healthcheck to force create new log
curl -s 'http://localhost/healthcheck?cron=daily'

# reload nginx to make sure new log is created
/usr/local/openresty/bin/openresty -s reload

# if aws env are entered, then we can do backup
if [[ "$AWS_PATH" != '' ]]; then
  LOGDIR="/usr/local/openresty/nginx/logs/";

  # sync all access log files modified more than 2 hours ago
  # this mean current date file should not be included if
  # you have something correctly hitting health check
  for line in `find $LOGDIR -mtime -120 -name "*-access.log"`
    do
    echo $line;
    file=`echo $line | awk -F "/" '{ print $NF }'`;
    echo $file;
    YEAR=`echo $file | cut -d "-" -f 1`;
    MONTH=`echo $file | cut -d "-" -f 2`;
    DAY=`echo $file | cut -d "-" -f 3`;
    HOUR=`echo $file | cut -d "-" -f 4`;

    if [ ! -z "$YEAR"  ]
      then
        s3file=`aws s3 ls s3://$AWS_PATH/year=$YEAR/month=$MONTH/day=$DAY/$file`
        RETVAL=$?
        if [ $RETVAL -ne 0 ]
        then
          aws s3 cp $line s3://$AWS_PATH/year=$YEAR/month=$MONTH/day=$DAY/
        fi
      fi
    done

  # delete any log older than 7 days
  find $LOGDIR -type f -mtime -10080 -exec rm -f {} \;
fi
